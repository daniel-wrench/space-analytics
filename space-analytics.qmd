---
title: "Space Analytics 2025"
author: "Daniel Wrench"
# date: "`r Sys.Date()`"
format:
  html:
    toc: true
execute:
  echo: false
  eval: true
  include: true
  fig_width: 10     # Set default width for plots
  fig_height: 6    # Set default height for plots
  dpi: 300         # Set default DPI for plots
---

## SPCE101 Lecture plan

*Work through notes below*

*Start compiling slides, putting placeholders for blank sections*

February 25th, 2pm

Title: **A Brief History of Spaceflight: From the Cold War to Commercial Space**

-   [*Plots to inspire discussion, comments*]{.underline}

    -   Launches by country

    -   Launches by commercial/government

-   **Space has changed a lot since the Space Race: has become international and commercial.**

    -   Talk about 3 eras of space exploration, highlighting SpaceX, NZ:

        -   **Cold War Era,** kicked off with rapid increase during Space Race

        -   **International Era:** more countries involved, some commercial. ISS. Rise of China. NZ is in the game: big industrial powerhouses of Japan and India: we are now launching just as much, if not more often than them. Even beat Russia last year. We are actually commercial. Brings us to...

        -   **Commercial Era:**

            -   SpaceX doing things much more cheaply, increasing demand.
            -   (Much of that demand is from themselves! Dominance of Starlink. *SpaceX put up x% of all mass to orbit in 2024, more than any other company or even country. Of that, x% were Starlink satellites (they were their own customer).)*

-   *What might be some good and bad consequences?*

    -   **Sending more stuff than ever before:** science missions, communications satellites, space tourists, and even people to the Moon for the first time in 50 years

    -   **Brings great opportunities**: more exploration and scientific discovery, more inspiration, more connectivity. Humans on Mars actually less than 20 years away for the first time in history.

    -   **But also big concerns:** Resource management, conflict avoidance (breakdown of "international world order" - more competition. Good and bad), biological reality of keeping humans alive in space long-term.

-   Title slide? **(ASF conclusion slide, minus title?)**

-   How did we get here? Why did the US stop going to the Moon? Or perhaps better worded - why did they go in the first place? *Use ASOI slides, go through history, expand on above points.*

    -   **Cold War Era:** Story of Space Race and Apollo (ASOIASF slides 5-8, 33)

    -   **International Era:** (transition from mentioning other space stations). Rise of China: , operating the one other current space station, milestones on the Moon. Not planning to stop there! Spurs US into action. Big expensive rocket that we need to send somewhere after shuttle (slides 21-34, not all crucial) - but no lander?? We'll come back to this

    -   **Commercial Era:** big investment and vision required: space-mad billionaires. Embrace of failure = innovation = cost reduction

        -   Tourism: VG and BO

        -   Satellite delivery: Rocket Lab, Kea, Dawn; SpaceX

            -   Big plans, need to fund: satellites, ISS cargo, crew after shuttle, Starlink (slide 15?)

            -   Starship... meant for Mars, useful for Moon

    -   **Back to the Moon and on to Mars?** Motivating Artemis. *After multiple failed attempts, now the “stars have aligned”: resources on the Moon, an affordable lander to compensate for a mightly unaffordable, but politically valuable, rocket, a competitor, an exciting long-term goal.*

    -   **Settle down, space cowboys**. Issues to solve: space weather, law, biology, diplomacy. (**ASF slides 7-8)**

## Others steps for code (but focus on lecture for now)

-   Investigate easy re-formatting (shortcut, on save?)
-   Look at pre-made dicts:
    -   https://github.com/Nosudrum/launch-stats/blob/main/python/plotsCodes/PlotFunctions.py#L141
    -   https://github.com/Nosudrum/launch-stats/blob/2c1fbe973bd213596118302b63d5f693e26f5334/python/plots_old.py#L203
-   Put on GitHub
    -   <https://quinnasena.github.io/resbaz2022/slides/slide_deck.html#/title-slide>
    -   [Quarto for Scientist](https://qmd4sci.njtierney.com/)
-   Tell story
-   Publish as blog post/s
-   Send to Jatan, lunar groups: any other information you think would be useful
-   Look into OWID data (see emails from Charlie)

```{r}
#| label: libraries
#| include: false

# Install and load the necessary packages
library(rvest)
library(tidyverse)
library(janitor)
library(lubridate)
library(plotly)
library(knitr)
library(plotly)
```

## All Launches

Selection of variables of six most recent launches:

```{r}
#| label: read_data
#| include: false

launch_df <- read_csv("launches_cleaned.csv")
```

```{r}
launch_df |>
  select(net, mission, rocket, orbit, launchpad, country) |>
  dplyr::arrange(desc(net)) |>
  head() |>
  kable()
```

```{r}

plot_launches_by_year <- function(group_var, title, x_label) {
  # Dynamically group by year and the selected category
  launch_summary <- launch_df |>
    group_by(year, {{group_var}}) |> # Converts function argument to column name
    summarise(count = n(), .groups = "drop")
  
  # Create stacked bar chart
  ggplot(launch_summary, aes(x = year, y = count, fill = {{group_var}})) +
    geom_bar(stat = "identity", position = "stack") +
    scale_x_date(date_labels = "%Y", date_breaks = "5 year") +
    labs(
      title = title,
      x = "Year",
      y = "Number of Launches",
      fill = x_label
    ) +
    theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
```

```{r}
#| label: grouping vars

launch_df <- launch_df |> 
  mutate(country_grped = ifelse(country %in% names(sort(table(country), decreasing = TRUE))[1:9], 
                          country, 
                          "Other")) |> 
  mutate(country_grped = recode(country_grped,
                                "Kazakhstan" = "USSR/Russia",
                                "Russia" = "USSR/Russia"))

```

```{r}
head(launch_df)
```

```{r}
launch_df |> 
  filter(year=="2024-01-01") |> 
  count(country, sort = TRUE)
```

```{r}
plot_launches_by_year(country_grped, "Launches by Country per Year", "Country") |> ggplotly()

```

Can make above interactive with `|> ggplotly()`, but doesn't allow for nice de-stacking of bars. However, it is easily convertable to a function, which does not seem to be the case with the raw plotly code below:

```{r}
launch_summary_country <- launch_df |>
  group_by(year, country_grped) |> # Converts function argument to column name
  summarise(count = n(), .groups = "drop")
  #mutate(year=year(year))
  

# Create the plotly stacked bar chart
p <- plot_ly(launch_summary_country, x = ~year, y = ~count, color = ~country_grped, type = 'bar' 
             #text = ~paste(year(year), ": ", count, "launches"), hoverinfo = 'text'
             ) %>%
  layout(
    barmode = 'stack',           # Stack the bars
    #yaxis = list(range = c(0, NA)),  # Ensure y-axis starts at 0
    title = "All Orbital Launch Attempts, by Country", 
    xaxis = list(title = "Year"), 
    yaxis = list(title = "Count of launch attempts")
  )

# Show the interactive plot
p
```

```{r}

plot_launches_by_year(missionTypeStarlink, "Starlink vs Non-Starlink Launches by Year", "Launch Type")
plot_launches_by_year(launchServiceProvider, "Launches by Provider per Year", "Launch Provider")
plot_launches_by_year(launchServiceProviderType, "Launches by Provider Type per Year", "Launch Provider")
```

## Lunar missions

The story of the moon's abandonment, and the arrival of new players. To accompany my essay on returning to the Moon.

Data sourced from Wikipedia: <https://en.wikipedia.org/wiki/List_of_missions_to_the_Moon>

For similar visualisations, see:

-   <https://www.lpi.usra.edu/lunar/missions/>
-   <https://www.visualcapitalist.com/cp/visualizing-all-attempted-and-successful-moon-landings/>
-   <https://www.scientificamerican.com/article/50-years-of-moon-missions-graphic/>)

```{r}
#| label: importing data

# Specify the URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/List_of_missions_to_the_Moon"

# Read the page
page <- read_html(url)

# Extract the first table with the class 'wikitable'
tables <- page %>%
  html_nodes("table.wikitable") %>%
  html_table(fill = TRUE)

# Define function to clean raw tables
clean_table <- function(df_raw) {
  df_raw <- df_raw[, -1] |> clean_names() # Remove index columns and clean column names
  # Remove any footnotes
  df_raw <- as.data.frame(lapply(df_raw, function(x)
    str_remove_all(x, "\\[\\d+\\]")))
  # Move description rows to new column
  df <- filter(df_raw, spacecraft != launch_date)
  mission_descriptions <- filter(df_raw, spacecraft == launch_date) |> rename(description = spacecraft) |>
    select(1:2)
  df <- merge(df, mission_descriptions)
  
  return(df)
}

c20_clean <- clean_table(tables[[1]])
c21_clean <- clean_table(tables[[2]])

moon_missions <- rbind(c20_clean, c21_clean)
```

```{r}
#| label: clean-data

# Format dates
moon_missions$launch_date <- lubridate::dmy(moon_missions$launch_date)
moon_missions$year <- lubridate::year(moon_missions$launch_date)

# Fixing description
moon_missions$description[moon_missions$spacecraft=="Ranger 5 lander"] <- "Solar panels erroneously disengaged from power system, failed 9 hours after launch when batteries were depleted. Missed the Moon as course correction was not completed."

# Get country names
agency_countries <- list(
  "NASA" = "USA",
  "CNSA" = "China",
  "JAXA" = "Japan",
  "ESA" = "Europe",
  "ISRO" = "India",
  "Lavochkin" = "USSR/Russia",
  "OKB-1" = "USSR/Russia",
  "Roscosmos" = "USSR/Russia"
)

# Replace using gsub with fixed = TRUE to match exact strings
moon_missions <- moon_missions |> 
  mutate(country = case_when(
    operator == "NASA" ~ "USA",
    operator == "CNSA" ~ "China",
    operator == "JAXA" ~ "Japan",
    operator == "ESA" ~ "Europe",
    operator == "ISRO" ~ "India",
    operator == "Lavochkin" ~ "USSR/Russia",
    operator == "OKB-1" ~ "USSR/Russia",
    operator == "Roscosmos" ~ "USSR/Russia",
    TRUE ~ operator))


# Creating concise "spacecraft (mission)" name

moon_missions <- moon_missions |> 
  rowwise() |> 
  mutate(mission_new = ifelse(
    grepl(spacecraft, mission),
    paste0("<b>",spacecraft,"</b>"),
    paste0("<b>",spacecraft,"</b>", " (", mission, ")")
  ))

# Simplifying statuses

moon_missions <- moon_missions %>%
  mutate(
    outcome_simple = case_when(
      outcome %in% c("Operational", "Success", "En route") ~ "Success",
      .default = "Failure"
    )
  )

# Putting line breaks in description
moon_missions <- moon_missions %>%
  mutate(description = str_wrap(description, width = 50)) %>%
  mutate(description = str_replace_all(description, "\n", "<br>"))

```

```{r}
#| label: decade-table

decade_table <- moon_missions %>%
  mutate(decade = floor(year(launch_date) / 10) * 10) |> 
  group_by(decade) |> 
  summarise(missions = n_distinct(mission))

kable(decade_table, col.names = c("Decade", "Lunar missions"))
```

None in the 80s! Matches Wikipedia graph

### Landings

#### By country and outcome

```{r}
#| label: ggplot

# Make operator legend in order of frequency
country_counts <- table(moon_missions$country)
country_counts <- sort(country_counts, decreasing = TRUE) 
moon_missions$country <- factor(moon_missions$country, levels = names(country_counts))


moon_missions |> 
  filter(grepl("Lander", mission_type)) |> # Includes lander/launchers like LEM
  group_by(year) |> 
  arrange(desc(outcome_simple)) |> 
  mutate(y = row_number()) |> 
  ggplot(aes(x=year, y = y, text=paste0(
    mission_new,  
    "<br>Operator: ",operator,
    "<br>Launch date: ",launch_date, 
    "<br>Outcome: ", outcome,
    "<br><br>", description
  )
    )) +
  geom_point(aes(shape=outcome_simple, color=country), size=2) + # factors: alpha, colour, fill, shape, size 
  scale_shape_manual(values = c("Success" = 16, "Failure" = 4)) + # Circle for Success, Cross for Failure
  scale_color_manual(values=c('#377eb8','#e41a1c',"gold", '#4daf4a','#984ea3','#ff7f00','darkblue','#a65628','#f781bf','#999999')) +
  labs(colour="Country/Company", shape="Outcome") +
  ggtitle("All lunar landing attempts") +
  ylim(c(0,15)) + 
  theme_minimal() +
  theme(
    legend.position = "inside",
    legend.position.inside = c(.55, .55),
    legend.box.background = element_rect(color="black", linewidth=1),
    axis.title.y = element_blank(),    # Remove y-axis title
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),     # Remove y-axis labels
    axis.ticks.y = element_blank(),    # Remove y-axis ticks
    axis.line.y = element_blank(),
    panel.grid.major.y = element_blank(),  # Remove y-axis major grid lines
    panel.grid.minor.y = element_blank()   # Remove y-axis minor grid lines
  )
```

#### Interactive

```{r plotly}

p <- moon_missions |> 
  filter(grepl("Lander", mission_type)) |> # Includes lander/launchers like LEM
  group_by(year) |> 
  arrange(desc(outcome_simple)) |> 
  mutate(y = row_number()) |> 
  ggplot(aes(x=year, y = y, text=paste0(
    mission_new,  
    "<br>Operator: ",operator,
    "<br>Launch date: ",launch_date, 
    "<br>Outcome: ", outcome,
    "<br><br>", description
  )
    )) +
  geom_point(aes(shape=outcome_simple)) + # factors: alpha, colour, fill, shape, size 
  scale_shape_manual(values = c("Success" = 16, "Failure" = 4)) + # Circle for Success, Cross for Failure
  ggtitle("All lunar landing attempts (hover over points for details)") +
  ylim(c(0,15)) + 
  theme_minimal() +
  theme(
    axis.title.y = element_blank(),    # Remove y-axis title
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),     # Remove y-axis labels
    axis.ticks.y = element_blank(),    # Remove y-axis ticks
    axis.line.y = element_blank(),
    panel.grid.major.y = element_blank(),  # Remove y-axis major grid lines
    panel.grid.minor.y = element_blank()   # Remove y-axis minor grid lines
  )  +
  guides(color = guide_legend(title = NULL))  # Remove legend title

ggplotly(p, tooltip="text")  %>%
  layout(
    legend = list(
      title = "",  # Set legend title to an empty string to remove it
      bgcolor="lightgrey",
      x = 0.05,
      y=0.95
    )
  )

```

#### Locations

From Wikipedia: <https://en.wikipedia.org/wiki/File:Moon_landing_sites.svg>

Click to visit Wikipedia page for that mission

(Note: does not include most recent missions)

<img src="https://upload.wikimedia.org/wikipedia/commons/3/34/Moon_landing_sites.svg" alt="Markdown Logo"/>
