---
title: "Space Analytics 2025"
author: "Daniel Wrench"
date: today
bibliography: refs.bib
format:
  html:
    toc: false
    fig_width: 8     # Set default width for plots
    fig_height: 6   # Set default height for plots
execute:
  echo: false
  eval: true
  cache: true
  include: true
  dpi: 300         # Set default DPI for plots
---

## To-do

*Do exploration in an R script. Save this doc for final versions.*

Quarto references:

-   [Quarto slides](https://quinnasena.github.io/resbaz2022/slides/slide_deck.html#/title-slide)

-   [Quarto guide](https://qmd4sci.njtierney.com/)

-   [x] Finish lecture slides

-   [ ] Put link + 3 figs here, with bulleted Starlinks stats

-   [ ] Backup of those (non-interactive) at start of slides

-   [ ] Cf. slides to notes, adding presenter notes as need be

-   [ ] Practise *without* looking at notes

-   [ ] Convert powerpoint to PDF and commit that instead

-   [ ] Put lecture story into this document

    -   Tell specific story with certain plots, but also have big plot that people can interact with, probably just the standard plotly stacked bar but being able to select what the grouping variable is. Refer people to /include select plots of McDowell for object-level data perhaps

-   [x] Move lunar data processing to separate script

-   [ ] Try to reproduce lunar plots in this code

-   [ ] Investigate easy re-formatting (shortcut, on save?)

-   Look at pre-made dicts:

    -   https://github.com/Nosudrum/launch-stats/blob/main/python/plotsCodes/PlotFunctions.py#L141
    -   https://github.com/Nosudrum/launch-stats/blob/2c1fbe973bd213596118302b63d5f693e26f5334/python/plots_old.py#L203

-   [ ] Reference/cite the following data sources, as well as launch library of course:

    -   OWID data (see emails from Charlie): <https://ourworldindata.org/space-exploration-satellites>

    -   Jonathan McDowell: https://planet4589.org/space/stats/index.htmlPublish as blog post/s

-   [ ] Publish as a blog

-   [ ] Send to Jatan, lunar groups, Casey: any other information you think would be useful?

## SPCE101 Lecture plan

February 25th, 2pm

Title: **A Brief History of Spaceflight: From the Cold War to Commercial Space**


-   **Sending more stuff than ever before:** science missions, communications satellites, space tourists, and even people to the Moon for the first time in 50 years

-   **Brings great opportunities**: more exploration and scientific discovery, more inspiration, more connectivity. More of the world can send stuff to space. Magnet being built in Lower Hutt is being sent to ISS on a SpaceX rocket. Humans on Mars actually less than 20 years away for the first time in history.

-   **But also big concerns:** Resource management, conflict avoidance (breakdown of "international world order" - more competition. Good and bad), biological reality of keeping humans alive in space long-term.


```{r}
#| label: libraries
#| include: false

# Install and load the necessary packages
library(rvest)
library(tidyverse)
library(janitor)
library(lubridate)
library(plotly)
library(knitr)
library(plotly)
library(webshot)
library(DT)
```

## All Launches

```{r}
#| label: read_data
#| include: false

launch_df <- read_csv("data/launches_cleaned.csv")
# Limiting to full years
launch_df <- launch_df |> 
  filter(year!="2025-01-01")
```

NB: a lot of "commercial" launch providers are really the big aerospace contractors of that country that are largely funded by their governments, not truly private in the way that SpaceX, Rocket Lab, and Firefly are.

```{r}
provider_data <- launch_df |> 
  group_by(country, launchServiceProviderType, launchServiceProvider) |> 
  count() |> 
  arrange(country, desc(n))
```

```{r}
launch_df |>
  select(net, mission, rocket, orbit, launchpad, country) |>
  dplyr::arrange(desc(net)) |>
  DT::datatable()
```

```{r}

plot_launches_by_year <- function(group_var, title, x_label) {
  # Dynamically group by year and the selected category
  launch_summary <- launch_df |>
    group_by(year, {{group_var}}) |> # Converts function argument to column name
    summarise(count = n(), .groups = "drop")
  
  # Create stacked bar chart
  ggplot(launch_summary, aes(x = year, y = count, fill = {{group_var}})) +
    geom_bar(stat = "identity", position = "stack") +
    scale_x_date(date_labels = "%Y", date_breaks = "5 year") +
    labs(
      title = title,
      x = "Year",
      y = "Number of Launches",
      fill = x_label
    ) +
    theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
```

```{r}
#| label: grouping vars

launch_df <- launch_df |> 
  mutate(country_grped = ifelse(country %in% names(sort(table(country), decreasing = TRUE))[1:9], 
                          country, 
                          "Other")) |> 
  mutate(country_grped = recode(country_grped,
                                "Kazakhstan" = "USSR/Russia",
                                "Russia" = "USSR/Russia",
                                "Unknown" = "Other",
                                "United States of America" = "USA"))
```

Can make static ggplots interactive with `|> ggplotly()`, but doesn't allow for nice de-stacking of bars. However, it is easily convertable to a function, which does not seem to be the case with the raw plotly code below:

```{r}
# Get the right legend ordering

country_order <- launch_df %>%
  count(country_grped, sort = TRUE) %>%  # Count occurrences and sort descending
  pull(country_grped)

launch_df$country_grped <- factor(launch_df$country_grped, levels = rev(country_order))
```

```{r}
launch_summary_country <- launch_df |>
  group_by(year, country_grped) |> # Converts function argument to column name
  summarise(count = n(), .groups = "drop")  |> 
  mutate(year=year(year))
  
# Define color mapping
country_colors <- c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#a6761d','#e6ab02','#666666')

```

```{r}
satellites_by_prov <- launch_df |>
  filter(missionType!="Human Exploration" | is.na(missionType)) |> 
  mutate(launchServiceProviderType = ifelse(missionTypeStarlink=="Starlink", "SpaceX Starlink",
                                            ifelse(launchServiceProvider=="SpaceX", "Other SpaceX",
                                                          ifelse(launchServiceProviderType=="Commercial", "Other Commercial", launchServiceProviderType)))) |>   
  group_by(year, launchServiceProviderType) |> # Converts function argument to column name
  summarise(count = n(), .groups = "drop")  |> 
  mutate(year=year(year)) |> 
  filter(launchServiceProviderType!="Multinational")

# Define color mapping
#country_colors <- c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#a6761d','#e6ab02','#666666')

```

## SPCE101 Lecture

[Satellite Map](https://satellitemap.space/)

```{r}

leg_colors <- c('grey','#fee08b','#fc8d59','#d73027')

# Create the plotly stacked bar chart
p <- plot_ly(satellites_by_prov, x = ~year, y = ~count, color = ~launchServiceProviderType, type = 'bar', colors = leg_colors
             #width = 600, height = 400
             #text = ~paste(year(year), ": ", count, "launches"), hoverinfo = 'text'
             ) %>%
  layout(
    barmode = 'stack',           # Stack the bars
    #yaxis = list(range = c(0, NA)),  # Ensure y-axis starts at 0
    title = "All Satellite Launches 1957-2024, by Launch Provider Type", 
    xaxis = list(title = "Year"), 
    #font = list(size = 18),
    yaxis = list(title = "Count of launch attempts"),
    legend = list(
    x = 0.65,  # Move legend horizontally (0 = left, 1 = right)
    y = 0.9,   # Move legend vertically (0 = bottom, 1 = top),
    bordercolor="black",
    borderwidth=1
  )
  )

# Show the interactive plot
p
```

STATS

-   7,000 active satellites in LEO = 60% of all active LEO satellites (11,000)

-   At least 12,000 planned

-   20-60 per launch

-   First launch May 2019

-   300 collision avoidance maneuvers per day

-   **Half of the world's launches last year were of a SpaceX Falcon 9 (134/261)**

![60 Starlink satellites inside fairing of a Falcon 9 rocket. You can see how one company put 7000 satellites up in only 4 years! Source Elon Musk/Twitter](images/starlink_fairing.jpg){fig-align="left" width="269"}

[![Total number of active satellites over time. From Jonathan's Space Pages](plots/active_sats.jpg)](https://planet4589.org/space/stats/active.html)

```{r}
# Create the plotly stacked bar chart
p <- plot_ly(launch_summary_country, x = ~year, y = ~count, color = ~country_grped, colors = country_colors,  type = 'bar'
             #width = 600, height = 400
             #text = ~paste(year(year), ": ", count, "launches"), hoverinfo = 'text'
             ) %>%
  layout(
    barmode = 'stack',           # Stack the bars
    #yaxis = list(range = c(0, NA)),  # Ensure y-axis starts at 0
    title = "All Orbital Rocket Launches 1957-2024, by Country of Launch Site", 
    xaxis = list(title = "Year"), 
    #font = list(size = 18),
    yaxis = list(title = "Count of launch attempts"),
    legend = list(
    x = 0.65,  # Move legend horizontally (0 = left, 1 = right)
    y = 0.9,   # Move legend vertically (0 = bottom, 1 = top),
    bordercolor="black",
    borderwidth=1
  )
  )

# Show the interactive plot
p
```
